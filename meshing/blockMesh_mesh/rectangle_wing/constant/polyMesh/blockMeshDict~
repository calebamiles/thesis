/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
	version     2.0;
	format      ascii;
	class       dictionary;
	object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
	// Verticies for outer mesh
	(-6.0 -5.1250 0.000) // Vertex 0
	(-6.0 -0.1250 0.000) // Vertex 1
	(-6.0 -0.0625 0.000) // Vertex 2
	(-6.0  0.0625 0.000) // Vertex 3
	(-6.0  0.1250 0.000) // Vertex 4
	(-6.0  5.1250 0.000) // Vertex 5
	(-1.0  5.1250 0.000) // Vertex 6
	(-0.5  5.1250 0.000) // Vertex 7
	( 0.5  5.1250 0.000) // Vertex 8
	( 1.0  5.1250 0.000) // Vertex 9
	(11.0  5.1250 0.000) // Vertex 10
	(11.0  0.1250 0.000) // Vertex 11
	(11.0  0.0625 0.000) // Vertex 12
	(11.0 -0.0625 0.000) // Vertex 13
	(11.0 -0.1250 0.000) // Vertex 14
	(11.0 -5.1250 0.000) // Vertex 15
	( 1.0 -5.1250 0.000) // Vertex 16
	( 0.5 -5.1250 0.000) // Vertex 17
	(-0.5 -5.1250 0.000) // Vertex 18
	(-1.0 -5.1250 0.000) // Vertex 19
	(-6.0 -5.1250 0.500) // Vertex 20
	(-6.0 -0.1250 0.500) // Vertex 21
	(-6.0 -0.0625 0.500) // Vertex 22
	(-6.0  0.0625 0.500) // Vertex 23
	(-6.0  0.1250 0.500) // Vertex 24
	(-6.0  5.1250 0.500) // Vertex 25
	(-1.0  5.1250 0.500) // Vertex 26 
	(-0.5  5.1250 0.500) // Vertex 27
	( 0.5  5.1250 0.500) // Vertex 28
	( 1.0  5.1250 0.500) // Vertex 29
	(11.0  5.1250 0.500) // Vertex 30
	(11.0  0.1250 0.500) // Vertex 31
	(11.0  0.0625 0.500) // Vertex 32
	(11.0 -0.0625 0.500) // Vertex 33
	(11.0 -0.1250 0.500) // Vertex 34
	(11.0 -5.1250 0.500) // Vertex 35
	( 1.0 -5.1250 0.500) // Vertex 36
	( 0.5 -5.1250 0.500) // Vertex 37
	(-0.5 -5.1250 0.500) // Vertex 38
	(-1.0 -5.1250 0.500) // Vertex 39
	
	//Verticies for rectangular wing boundary
	(-1.0 -0.1250 0.000) // Vertex 40
	(-1.0 -0.0625 0.000) // Vertex 41
	(-1.0  0.0625 0.000) // Vertex 42
	(-1.0  0.1250 0.000) // Vertex 43
	(-0.5  0.1250 0.000) // Vertex 44
	( 0.5  0.1250 0.000) // Vertex 45
	( 1.0  0.1250 0.000) // Vertex 46
	( 1.0  0.0625 0.000) // Vertex 47
	( 1.0 -0.0625 0.000) // Vertex 48
	( 1.0 -0.1250 0.000) // Vertex 49
	( 0.5 -0.1250 0.000) // Vertex 50
	(-0.5 -0.1250 0.000) // Vertex 51
	(-1.0 -0.1250 0.500) // Vertex 52
	(-1.0 -0.0625 0.500) // Vertex 53
	(-1.0  0.0625 0.500) // Vertex 54
	(-1.0  0.1250 0.500) // Vertex 55
	(-0.5  0.1250 0.500) // Vertex 56
	( 0.5  0.1250 0.500) // Vertex 57
	( 1.0  0.1250 0.500) // Vertex 58
	( 1.0  0.0625 0.500) // Vertex 59
	( 1.0 -0.0625 0.500) // Vertex 60
	( 1.0 -0.1250 0.500) // Vertex 61
	( 0.5 -0.1250 0.500) // Vertex 62
	(-0.5 -0.1250 0.500) // Vertex 63
	
	//Verticies for rectangular wing
	(-0.500 -0.0625 0.000) // Vertex 64
	(-0.500  0.0625 0.000) // Vertex 65
	( 0.500  0.0625 0.000) // Vertex 66
	( 0.500 -0.0625 0.000) // Vertex 67
	(-0.500 -0.0625 0.500) // Vertex 68
	(-0.500  0.0625 0.500) // Vertex 69
	( 0.500  0.0625 0.500) // Vertex 70
	( 0.500 -0.0625 0.500) // Vertex 71
	


	
); 

blocks
(
	// Blocks for outer mesh
	hex ( 0 20 39 19  1 21 52 40) (1 20 20) simpleGrading (1 1 1) // Block 0
	hex ( 1 21 52 80  2 22 53 41) (1 40 10) simpleGrading (1 1 1) // Block 1
	hex ( 2 22 53 41  3 23 54 42) (1 20 10) simpleGrading (1 1 1) // Block 2
	hex ( 3 23 54 42  4 24 55 43) (1 40 10) simpleGrading (1 1 1) // Block 3
	hex ( 4 24 55 43  5 25 26  6) (1 20 20) simpleGrading (1 1 1) // Block 4
	hex (19 39 38 18 80 52 63 51) (1 10 20) simpleGrading (1 1 1) // Block 5
	hex (40 52 63 51 41 53 68 64) (1 10 10) simpleGrading (1 1 1) // Block 6
	hex (41 53 68 64 42 54 69 65) (1 10 10) simpleGrading (1 1 1) // Block 7
	hex (42 54 69 65 43 55 56 44) (1 10 10) simpleGrading (1 1 1) // Block 8
	hex (43 55 56 44  6 26 27  7) (1 10 20) simpleGrading (1 1 1) // Block 9
	hex (18 38 37 17 51 63 62 50) (1 30 20) simpleGrading (1 1 1) // Block 10
	hex (51 63 62 50 64 68 71 67) (1 30 10) simpleGrading (1 1 1) // Block 11
	hex (65 69 70 66 44 56 57 45) (1 30 10) simpleGrading (1 1 1) // Block 12
	hex (44 56 57 45  7 27 28  8) (1 30 20) simpleGrading (1 1 1) // Block 13
	hex (17 37 36 16 50 62 61 49) (1 10 20) simpleGrading (1 1 1) // Block 14
	hex (50 62 61 49 67 71 60 48) (1 10 10) simpleGrading (1 1 1) // Block 15
	hex (67 71 60 48 66 70 59 47) (1 10 10) simpleGrading (1 1 1) // Block 16
	hex (66 70 59 47 45 57 58 46) (1 10 10) simpleGrading (1 1 1) // Block 17
	hex (45 57 58 46  8 28 29  9) (1 10 20) simpleGrading (1 1 1) // Block 18
	hex (16 36 35 30 49 61 34 14) (1 80 20) simpleGrading (1 1 1) // Block 19
	hex (49 61 34 14 48 60 33 13) (1 80 10) simpleGrading (1 1 1) // Block 20
	hex (48 60 33 13 47 59 32 12) (1 80 10) simpleGrading (1 1 1) // Block 21
	hex (47 59 32 12 46 58 31 11) (1 80 10) simpleGrading (1 1 1) // Block 22
	hex (46 58 31 11  9 29 30 10) (1 80 20) simpleGrading (1 1 1) // Block 23

	

);

edges
(
);

boundary
(

	wing
	{
		type wall;
		faces
		(
			(64 68 69 65)
			(65 69 70 66)
			(71 67 66 70)
			(64 67 71 68)
		);
	}

	inlet
	{
		type wall;
		faces
		(
			(0 20 21 1)
			(1 21 22 2)
			(2 22 23 3)
			(3 23 24 4)
			(4 24 25 5) 
		);
	}
	
	outlet
	{
		type wall;
		faces
		(
			(35 15 14 34)
			(34 14 13 33)
			(33 13 12 32)
			(32 12 11 31)
			(31 11 10 30)
		);
	}
	
	
	topAndBottom
	{
		type wall;
		faces
		(
			//Faces in top
			(25 26  6 5)
			(26 27  7 6)
			(27 28  8 7)
			(28 29  9 8)
			(29 30 10 9)
	
			
			//Faces in bottom
			( 0 19 39 20)
			(19 18 38 39)
			(18 17 37 38)
			(17 16 36 37)
			(16 15 35 36)
			
				

		);
	}	
	
	frontAndBack
	{
		type empty;
		faces
		(
			//Faces in back			
			(15 16 49 14)
			(14 49 48 13)
			(13 48 47 12)
			(12 47 46 11)
			(11 46  9 10)
			(16 17 50 49)
			(49 50 67 48)
			(48 67 66 47)
			(47 66 45 46)
			(46 45  8  9)
			(17 18 51 50) 
			(50 51 64 67)
			(66 65 44 45)
			(45 44  7  8)
			(18 19 40 51)
			(51 40 41 64)
			(64 41 42 65)
			(65 42 43 44)
			(44 43  6  7)
			(19  0  1 40)
			(40  1  2 41)
			(41  2  3 42) 
			(42  3  4 43)
			(43  4  5  6)  
			
			
			//Faces in front
			(20 39 52 21)
			(21 52 53 22)
			(22 53 54 23)
			(23 54 55 24)
			(24 55 26 25)
			(39 38 63 52)
			(52 63 68 53)
			(53 68 69 54)
			(54 69 56 55)
			(55 56 27 26)
			(38 37 62 63)
			(63 62 71 68)
			(69 70 57 56)
			(56 57 28 27)
			(37 36 61 62)
			(62 61 60 71)
			(71 60 59 70)
			(70 59 58 57)
			(57 58 29 28)
			(36 35 34 61)
			(61 34 33 60)
			(60 33 32 59)
			(59 32 31 58)
			(58 31 30 29)

		);
	}

  
);

mergePatchPairs
(
);

// ************************************************************************* //
